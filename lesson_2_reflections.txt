What happens when you initialize a repository? Why do you need to do it?
    Creates a .git directory and files/folders neccessary for git to run.
    It creates the files and strutures for a local git instance under 
    a .git directory.  The structures are needed to record and track commits 
    and checkouts.

How is the staging area different from the working directory and the repository?
What value do you think it offers?
    Just what is selected for a commit versus all files.  Let's you specify what
    you are commiting.
    The staging area is intermediate area between the physical, working directory 
    and the version control system, allowing files to be included to or excluded 
    from future commits.

How can you use the staging area to make sure you have one commit per logical
change?
    You're just staging what relates to a change.
    It can be used to isolate exactly which files were part of the change.

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
    They are a path to work on experimental or new ideas, without blocking 
    bug-fixes, updates, etc on the main product codeline.

How do the diagrams help you visualize the branch structure?
    It shows the tree-like nature of branching in a physical way.

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?
    Two seperate lines of change/code are brought back together.  The diagram 
    shows that in a graphical way.

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
    Automatic merging will automate the easy merges, instead of always doing it 
    all manually.

